name: DNS Trust Check

on:
  workflow_dispatch:
  schedule:
    - cron: '0 15 * * *'

jobs:
  dns_trust:
    runs-on: ubuntu-latest

    steps:
      - name: Restore APT cache
        uses: actions/cache@v3
        with:
          path: |
            /var/cache/apt
            /var/lib/apt/lists
          key: ${{ runner.os }}-apt-${{ hashFiles('**/apt-packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install kdig (knot-dnsutils)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends knot-dnsutils

      - name: Warm-up DNS Query
        run: |
          servers=("3.39.126.146" "15.165.111.52")
          server_names=("Primary" "Secondary")
          
          for i in "${!servers[@]}"; do
            server="${servers[$i]}"
            name="${server_names[$i]}"
            echo "Warming up $name server ($server) with standard A query"
            
            if kdig @$server example.com +short > /dev/null 2>&1; then
              echo "‚úÖ Warm-up query to $name ($server): SUCCESS"
            else
              echo "‚ö†Ô∏è Warm-up query to $name ($server): FAILED"
            fi
          done

      - name: Check DNS over HTTPS (DoH)
        continue-on-error: true
        run: |
          urls=("https://one.dns.onetwohour.com/dns-query" "https://two.dns.onetwohour.com/dns-query")
          hosts=("one.dns.onetwohour.com" "two.dns.onetwohour.com")
          server_names=("Primary" "Secondary")
      
          for i in "${!urls[@]}"; do
            url="${urls[$i]}"
            host="${hosts[$i]}"
            name="${server_names[$i]}"
      
            echo "Checking DoH on $name server ($url)"
            
            if kdig @${host} +https=${url} example.com +short > /dev/null 2>&1; then
              echo "üîí DoH on $name ($url): PASS"
            else
              echo "üö® DoH on $name ($url): FAIL"
              touch /tmp/dns_failed
            fi
          done
          
      - name: Check DNS over TLS (DoT)
        continue-on-error: true
        run: |
          servers=("3.39.126.146" "15.165.111.52")
          server_names=("Primary" "Secondary")
          
          for i in "${!servers[@]}"; do
            server="${servers[$i]}"
            name="${server_names[$i]}"
            echo "Checking DoT on $name server ($server)"
            
            if kdig +tls @$server -p 853 example.com +short > /dev/null 2>&1; then
              echo "üîí DoT on $name ($server): PASS"
            else
              echo "üö® DoT on $name ($server): FAIL"
              touch /tmp/dns_failed
            fi
          done
          
      - name: Check DNS over QUIC (DoQ)
        continue-on-error: true
        run: |
          servers=("3.39.126.146" "15.165.111.52")
          server_names=("Primary" "Secondary")
          
          for i in "${!servers[@]}"; do
            server="${servers[$i]}"
            name="${server_names[$i]}"
            echo "Checking DoQ on $name server ($server)"
            
            if kdig +quic @$server -p 853 example.com +short > /dev/null 2>&1; then
              echo "üîí DoQ on $name ($server): PASS"
            else
              echo "üö® DoQ on $name ($server): FAIL"
              touch /tmp/dns_failed
            fi
          done

      - name: Check DNSSEC
        continue-on-error: true
        run: |
          servers=("3.39.126.146" "15.165.111.52")
          server_names=("Primary" "Secondary")
          
          for i in "${!servers[@]}"; do
            server="${servers[$i]}"
            name="${server_names[$i]}"
            echo "Checking DNSSEC on $name server ($server)"
            
            if kdig +dnssec @$server example.com | grep -q 'Flags:.* ad'; then
              echo "üîí DNSSEC on $name ($server): PASS"
            else
              echo "üö® DNSSEC on $name ($server): FAIL"
              touch /tmp/dns_failed
            fi
          done

      - name: Summary Report
        if: always()
        run: |
          echo "=================================="
          echo "üìä DNS Trust Check Summary"
          echo "=================================="
          echo "‚úÖ Primary DNS: 3.39.126.146 (one.dns.onetwohour.com)"
          echo "‚úÖ Secondary DNS: 15.165.111.52 (two.dns.onetwohour.com)"
          echo ""
          echo "üîç Tested Protocols:"
          echo "  ‚Ä¢ DNSSEC (DNS Security Extensions)"
          echo "  ‚Ä¢ DoH (DNS over HTTPS)"
          echo "  ‚Ä¢ DoT (DNS over TLS)"
          echo "  ‚Ä¢ DoQ (DNS over QUIC)"
          echo ""
          echo "üìÖ Check completed at: $(date)"

          if [ -f /tmp/dns_failed ]; then
            echo "‚ùå One or more checks failed"
            exit 1
          else
            echo "‚úÖ All checks passed"
          fi
